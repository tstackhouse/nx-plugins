{
  "$schema": "http://json-schema.org/draft-07/schema",
  "id": "SchematicsNxserverlessApp",
  "title": "Serverless Node-TypeScript Api Options Schema",
  "type": "object",
  "properties": {
    "name": {
      "description": "The name of the node api.",
      "type": "string",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the serverless api?"
    },
    "directory": {
      "description": "The directory of the new api.",
      "type": "string",
      "x-prompt": "In which directory should the serverless api be generated?"
    },
    "skipFormat": {
      "description": "Skip formatting files",
      "type": "boolean",
      "default": false
    },
    "skipPackageJson": {
      "type": "boolean",
      "default": false,
      "description": "Do not add dependencies to package.json."
    },
    "linter": {
      "description": "The tool to use for running lint checks.",
      "type": "string",
      "enum": ["eslint", "tslint"],
      "default": "tslint"
    },
    "unitTestRunner": {
      "type": "string",
      "enum": ["jest", "none"],
      "description": "Test runner to use for unit tests",
      "default": "jest"
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the api (used for linting)"
    },
    "frontendProject": {
      "type": "string",
      "description": "Frontend project that needs to access this api. This sets up proxy configuration."
    },
    "provider": {
      "type": "string",
      "description": "The cloud provider for this serverless api.",
      "x-prompt": "Which cloud provider are you using for this serverless api? ( aws | azure | google ) etc."
    },
    "baseWorkspaceTsConfig": {
      "type": "boolean",
      "default": false,
      "description": "Extends tsconfig.base.json when true instead of tsconfig.json"
    }
  },
  "required": []
}
